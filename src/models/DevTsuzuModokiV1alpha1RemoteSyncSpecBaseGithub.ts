/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * GitHub is the source from GitHub
 * @export
 * @interface DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub
 */
export interface DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub {
    /**
     * Branch is the branch name(optional)
     * @type {string}
     * @memberof DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub
     */
    branch?: string;
    /**
     * Owner is the repository's owner
     * @type {string}
     * @memberof DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub
     */
    owner: string;
    /**
     * PullRequest is the pull request id(optional)
     * @type {number}
     * @memberof DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub
     */
    pullRequest?: number;
    /**
     * Repository is the repository's name
     * @type {string}
     * @memberof DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub
     */
    repo: string;
    /**
     * SecretName is the name of the Secret resource saving a GitHub token
     * @type {string}
     * @memberof DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub
     */
    secretName: string;
    /**
     * SHA is the sha of a commit(optional)
     * @type {string}
     * @memberof DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub
     */
    sha?: string;
}

export function DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithubFromJSON(json: any): DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub {
    return DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithubFromJSONTyped(json, false);
}

export function DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithubFromJSONTyped(json: any, ignoreDiscriminator: boolean): DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'branch': !exists(json, 'branch') ? undefined : json['branch'],
        'owner': json['owner'],
        'pullRequest': !exists(json, 'pullRequest') ? undefined : json['pullRequest'],
        'repo': json['repo'],
        'secretName': json['secretName'],
        'sha': !exists(json, 'sha') ? undefined : json['sha'],
    };
}

export function DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithubToJSON(value?: DevTsuzuModokiV1alpha1RemoteSyncSpecBaseGithub | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branch': value.branch,
        'owner': value.owner,
        'pullRequest': value.pullRequest,
        'repo': value.repo,
        'secretName': value.secretName,
        'sha': value.sha,
    };
}


