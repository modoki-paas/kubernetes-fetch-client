/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NetworkingV1beta1HTTPIngressPath,
    NetworkingV1beta1HTTPIngressPathFromJSON,
    NetworkingV1beta1HTTPIngressPathFromJSONTyped,
    NetworkingV1beta1HTTPIngressPathToJSON,
} from './';

/**
 * HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
 * @export
 * @interface NetworkingV1beta1HTTPIngressRuleValue
 */
export interface NetworkingV1beta1HTTPIngressRuleValue {
    /**
     * A collection of paths that map requests to backends.
     * @type {Array<NetworkingV1beta1HTTPIngressPath>}
     * @memberof NetworkingV1beta1HTTPIngressRuleValue
     */
    paths: Array<NetworkingV1beta1HTTPIngressPath>;
}

export function NetworkingV1beta1HTTPIngressRuleValueFromJSON(json: any): NetworkingV1beta1HTTPIngressRuleValue {
    return NetworkingV1beta1HTTPIngressRuleValueFromJSONTyped(json, false);
}

export function NetworkingV1beta1HTTPIngressRuleValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkingV1beta1HTTPIngressRuleValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paths': ((json['paths'] as Array<any>).map(NetworkingV1beta1HTTPIngressPathFromJSON)),
    };
}

export function NetworkingV1beta1HTTPIngressRuleValueToJSON(value?: NetworkingV1beta1HTTPIngressRuleValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'paths': ((value.paths as Array<any>).map(NetworkingV1beta1HTTPIngressPathToJSON)),
    };
}


