/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1ExecAction,
    V1ExecActionFromJSON,
    V1ExecActionFromJSONTyped,
    V1ExecActionToJSON,
    V1HTTPGetAction,
    V1HTTPGetActionFromJSON,
    V1HTTPGetActionFromJSONTyped,
    V1HTTPGetActionToJSON,
    V1TCPSocketAction,
    V1TCPSocketActionFromJSON,
    V1TCPSocketActionFromJSONTyped,
    V1TCPSocketActionToJSON,
} from './';

/**
 * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 * @export
 * @interface V1Probe
 */
export interface V1Probe {
    /**
     * 
     * @type {V1ExecAction}
     * @memberof V1Probe
     */
    exec?: V1ExecAction;
    /**
     * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * @type {number}
     * @memberof V1Probe
     */
    failureThreshold?: number;
    /**
     * 
     * @type {V1HTTPGetAction}
     * @memberof V1Probe
     */
    httpGet?: V1HTTPGetAction;
    /**
     * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof V1Probe
     */
    initialDelaySeconds?: number;
    /**
     * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
     * @type {number}
     * @memberof V1Probe
     */
    periodSeconds?: number;
    /**
     * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
     * @type {number}
     * @memberof V1Probe
     */
    successThreshold?: number;
    /**
     * 
     * @type {V1TCPSocketAction}
     * @memberof V1Probe
     */
    tcpSocket?: V1TCPSocketAction;
    /**
     * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     * @type {number}
     * @memberof V1Probe
     */
    timeoutSeconds?: number;
}

export function V1ProbeFromJSON(json: any): V1Probe {
    return V1ProbeFromJSONTyped(json, false);
}

export function V1ProbeFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Probe {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'exec': !exists(json, 'exec') ? undefined : V1ExecActionFromJSON(json['exec']),
        'failureThreshold': !exists(json, 'failureThreshold') ? undefined : json['failureThreshold'],
        'httpGet': !exists(json, 'httpGet') ? undefined : V1HTTPGetActionFromJSON(json['httpGet']),
        'initialDelaySeconds': !exists(json, 'initialDelaySeconds') ? undefined : json['initialDelaySeconds'],
        'periodSeconds': !exists(json, 'periodSeconds') ? undefined : json['periodSeconds'],
        'successThreshold': !exists(json, 'successThreshold') ? undefined : json['successThreshold'],
        'tcpSocket': !exists(json, 'tcpSocket') ? undefined : V1TCPSocketActionFromJSON(json['tcpSocket']),
        'timeoutSeconds': !exists(json, 'timeoutSeconds') ? undefined : json['timeoutSeconds'],
    };
}

export function V1ProbeToJSON(value?: V1Probe | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'exec': V1ExecActionToJSON(value.exec),
        'failureThreshold': value.failureThreshold,
        'httpGet': V1HTTPGetActionToJSON(value.httpGet),
        'initialDelaySeconds': value.initialDelaySeconds,
        'periodSeconds': value.periodSeconds,
        'successThreshold': value.successThreshold,
        'tcpSocket': V1TCPSocketActionToJSON(value.tcpSocket),
        'timeoutSeconds': value.timeoutSeconds,
    };
}


