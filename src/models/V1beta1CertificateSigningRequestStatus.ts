/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1beta1CertificateSigningRequestCondition,
    V1beta1CertificateSigningRequestConditionFromJSON,
    V1beta1CertificateSigningRequestConditionFromJSONTyped,
    V1beta1CertificateSigningRequestConditionToJSON,
} from './';

/**
 * 
 * @export
 * @interface V1beta1CertificateSigningRequestStatus
 */
export interface V1beta1CertificateSigningRequestStatus {
    /**
     * If request was approved, the controller will place the issued certificate here.
     * @type {string}
     * @memberof V1beta1CertificateSigningRequestStatus
     */
    certificate?: string;
    /**
     * Conditions applied to the request, such as approval or denial.
     * @type {Array<V1beta1CertificateSigningRequestCondition>}
     * @memberof V1beta1CertificateSigningRequestStatus
     */
    conditions?: Array<V1beta1CertificateSigningRequestCondition>;
}

export function V1beta1CertificateSigningRequestStatusFromJSON(json: any): V1beta1CertificateSigningRequestStatus {
    return V1beta1CertificateSigningRequestStatusFromJSONTyped(json, false);
}

export function V1beta1CertificateSigningRequestStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1CertificateSigningRequestStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'certificate': !exists(json, 'certificate') ? undefined : json['certificate'],
        'conditions': !exists(json, 'conditions') ? undefined : ((json['conditions'] as Array<any>).map(V1beta1CertificateSigningRequestConditionFromJSON)),
    };
}

export function V1beta1CertificateSigningRequestStatusToJSON(value?: V1beta1CertificateSigningRequestStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'certificate': value.certificate,
        'conditions': value.conditions === undefined ? undefined : ((value.conditions as Array<any>).map(V1beta1CertificateSigningRequestConditionToJSON)),
    };
}


